# DataSource Configuration
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/order-service?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true
spring.datasource.username=root
spring.datasource.password=tSaransh@123

# Hibernate Properties
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect

# Hibernate ddl auto (create, create-drop, validate, update)
spring.jpa.hibernate.ddl-auto=update

# Server Port
server.port=8081

# Eureka Client Configuration
eureka.client.serviceUrl.defaultZone = http://eureka:password@localhost:8761/eureka


# Application Name
spring.application.name=order-service

# enable actuator
management.health.circuitbreakers.enable = true
management.endpoints.web.exposure.include=*
management.endpoints.health.show-details=always

# Resilience4J properties
resilience4j.circuitbreaker.instance.inventory.registerHealthIndicator = true
resilience4j.circuitbreaker.instance.inventory.event-count-buffer-size = 10
resilience4j.circuitbreaker.instance.inventory.slidingWindowType = COUNT_BASE
resilience4j.circuitbreaker.instance.inventory.slidingWindowSize = 5
resilience4j.circuitbreaker.instance.inventory.failureRateThreshold = 50
resilience4j.circuitbreaker.instance.inventory.waitDurationInOpenState = 5s
resilience4j.circuitbreaker.instance.inventory.permittedNumberOfCallsInHalfOpenState = 3
resilience4j.circuitbreaker.instance.inventory.automaticTransitionFromOpenToHalfOpenEnable = true

# Resilience4J Timeout Properties
resilience4j.timeoutlimiter.instance.inventory.timeout-duration = 3s

# Resilience4J Retry Properties
resilience4j.retry.instance.inventory.max-attempts = 3
resilience4j.retry.instance.inventory.wait-duration=5s

# Zipkin Properties
spring.zipkin.base-url=http://localhost:9411
spring.sleuth.sampler.probability=1.0
spring.cloud.compatibility-verifier.enabled=false

# Kafka Producer Properties
spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.template.default-topic=notificationTopic
spring.kafka.producer.group-id=notificationId
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.properties.spring.json.type.mapping=event:com.web.orderservice.event.OrderPlaceEvent